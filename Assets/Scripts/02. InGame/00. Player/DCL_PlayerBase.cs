using System;
using System.Collections;
using System.Collections.Generic;
using UnityEngine;

namespace HSM.Game
{
    //++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++
    //
    // DCL_PlayerBase
    // 플레이어 베이스 클래스 , 플레이어의 상태를 관리한다
    //
    //++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++


    public class DCL_PlayerBase : ObjectBase
    {
        //++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++
        // Enum
        //
        //++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++

        public enum PlayerState { IDLE, RUN, INTERACTION, DEATH };

        //++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++
        // Nested Class
        //
        //++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++

        #region [NestedClass] Setting
        //------------------------------------------------------------------------------------------------------------------------------------------------------
        [Serializable]
        public class NSetting
        {
            //public DCL_Status Player_Status = new DCL_Status();                         // 플레이어 스텟
            public List<NPlayerLevle> Player_Status_Level = new List<NPlayerLevle>();   // 
        }
        public NSetting Setting = new NSetting();
        #endregion

        #region [InterAction] 상호작용
        [Serializable]
        public class NInterAction
        {
            public float InterAction_Range;
            public float InterAction_Count;
            public float InterAction_Time;
        }
        public NInterAction Player_InterAction = new NInterAction();
        #endregion

        #region [Level] 플레이어 레벨
        [Serializable]
        public class NPlayerLevle
        {
            public DCL_Status Pl_Status;
            public int Level;

            public NPlayerLevle(DCL_Status status, int lv)
            {
                this.Pl_Status = status;
                this.Level = lv;
            }
        }
        #endregion

        //++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++
        // Parsing
        //
        //++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++

        #region [Parsing] PlayerStatus_Level
        //------------------------------------------------------------------------------------------------------------------------------------------------------
        [Serializable]
        public class PlayerStatus_Level
        {
            public List<NPlayerLevle> Player_Status_Level;
        }
        #endregion

        //++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++
        // Variable
        //
        //++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++

        #region [Variable] Base
        public float NowHP;
        private float HPRecoveryTime;
        #endregion

        #region [Variable] Level
        public int NowPlayerLevel;
        #endregion


        //++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++
        // Property
        //
        //++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++

        #region [Property] Setting
        //------------------------------------------------------------------------------------------------------------------------------------------------------
        public DCL_Status PL_Status => Setting.Player_Status_Level[NowPlayerLevel].Pl_Status;       // 플레이어 스텟
        #endregion




        //++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++
        // 0. Base Methods
        //
        //++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++

        #region [Init] Awake
        //------------------------------------------------------------------------------------------------------------------------------------------------------
        public override void Awake()
        {
            base.Awake();
            //Json_Utility_Extend.FileSaveList(Setting.Player_Status_Level, "Data/Json_Data/Player/Player_Status.Json");
            Setting.Player_Status_Level = Json_Utility_Extend.FileLoadList<NPlayerLevle>("Data/Json_Data/Player/Player_Status.Json");
        }
        #endregion

        #region [Init] Start
        //------------------------------------------------------------------------------------------------------------------------------------------------------
        public override void Start()
        {
            base.Start();
        }
        #endregion

        #region [Update]    
        //------------------------------------------------------------------------------------------------------------------------------------------------------
        public void Update()
        {
            Auto_HP_Recovery();
        }
        #endregion

        //+++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++
        //
        //+++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++
        // 1. Status_Change
        //
        //++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++

        #region [Status_Change] HP Recovery
        //------------------------------------------------------------------------------------------------------------------------------------------------------
        public void Auto_HP_Recovery()
        {
            HPRecoveryTime += Time.deltaTime;
            if (HPRecoveryTime > 3)
            {
                if (NowHP < PL_Status.HP)
                {
                    NowHP += PL_Status.HP_Recovery;
                    HPRecoveryTime = 0;
                }
            }
        }
        #endregion

        //++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++
        // 2. Move
        //
        //++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++


        //++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++
        // 3. Attack
        //
        //++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++


        //++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++
        // 4. InterAction
        //
        //++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++


        //++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++
        // 5. Death
        //
        //++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++

    }

}
